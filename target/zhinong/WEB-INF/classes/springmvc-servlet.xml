<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--启用Spring基于annotation的DI，使用户可以在Spring MVC中使用Spring的强大功能
    激活@Required @AutoWired @PostConstruct @PreDestory @Resource等标注-->
    <context:annotation-config/>

    <!--DisapatcherServlet上下文，只管理@Controller类型的Bean，忽略其他类型的Bean,如@Service-->
    <context:component-scan base-package="cn.blogss.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--HandlerMapping,无需配置，Spring MVC可以默认启动
        DefaultAnnotationHandlerMapping annotation-driven HandlerMapping
    -->

    <!--扩充了注解驱动，可以将请求参数绑定到控制器参数-->
    <mvc:annotation-driven></mvc:annotation-driven>


    <!--  放行css,js,images等静态资源 -->
    <mvc:default-servlet-handler />

    <!--文件上传-->
    <!--200*1024*1024即200M resolverLazily属性启用是为了推迟文件解析,以便捕获文件大小异常-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200"></property>
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="resolveLazily" value="true"></property>
    </bean>

    <!--jackson-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>


<!--配置ViewResolver,可以用多个ViewResolver,使用order属性排序,InternalResourceViewResolver放在最后
        -->
    <!--告诉DispatcherServlet将用哪个ViewResolver获取View-->
    <!--将相同的数据形式呈现出不同的表现形式-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

</beans>